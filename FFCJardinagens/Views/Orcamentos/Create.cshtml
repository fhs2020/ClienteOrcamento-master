@model FFCJardinagens.Models.Orcamento

@{
    ViewBag.Title = "Create";
}

<h2>Orçamento para @Model.ClienteNome</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container" style="margin-top:3%">
        <a href="#" class="btn btn-info" onclick="AddNewOrcamento(0)">Adicionar item</a> <br /><br />

        @Html.HiddenFor(model => model.ClienteID)

        @Html.HiddenFor(model => model.ID)
        <table class="table table-striped" id="myTable">
            <thead>
                <tr>
                    @*<th>Quantidade</th>*@

                    <th>Descriminação</th>
                    <th>Produto Unidade</th>
                    <th>Produto Total</th>
                    <th>Action(Editar)</th>
                    <th>Excluir</th>
                </tr>
            </thead>
            <tbody id="SetItemList">
                <tr id="LoadingStatus" style="color:red"></tr>
            </tbody>
        </table>
        <div class="modal fade" id="MyModal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <a href="#" class="close" data-dismiss="modal">&times;</a>
                        <h4 id="ModalTitle"></h4>
                    </div>
                    <div class="modal-body">
                        <form id="form1">
                            <fieldset id="SubmitForm">
                                @Html.Hidden("orcamentoID", Model.ID)

                                <div class="form-group">
                                    <label>Descriminação</label>
                                    @Html.TextAreaFor(m => m.Descriminação, new { @id = "Descriminacao", @class = "form-control", @placeholder = "Descriminação" })
                                </div>
                                <div class="form-group">
                                    <label>Produto Unidade</label>
                                    @Html.TextBoxFor(m => m.ProdutoUnidade, new { @id = "ProdutoUnidade", @class = "form-control", @placeholder = "Produto Unidade" })
                                </div>
                                <div class="form-group">
                                    <label>Valor</label>
                                    @Html.TextBoxFor(m => m.ProdutoTotal, new { @id = "ProdutoTotal", @class = "form-control", @placeholder = "Valor Total" })
                                </div>
                                @Html.HiddenFor(model => model.TotalOrcamentoID)
                                <div class="form-group">
                                    <a href="#" class="btn btn-block btn-success" id="SaveStudentRecord">Adicionar item</a>
                                </div>

                            </fieldset>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        @*Create A PopUp Modal For DeleteConfirmation*@

        <div class="modal fade" id="DeleteConfirmation">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <a href="#" class="close" data-dismiss="modal">&times;</a>
                        <h4>Excluir item</h4>
                    </div>
                    <div class="modal-body">
                        <h4>Certeza que deseja excluir</h4>
                        @Html.Hidden("orcamentoID", Model.ID)
                    </div>
                    <div class="modal-footer">
                        <a href="#" class="btn btn-primary" data-dismiss="modal" id="r">Cancelar</a>
                        <a href="#" class="btn btn-danger" onclick="ConfirmDelete()">Confirma</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Voltar para lista de orçamentos", "Index", "TotalOrcamentoes")
</div>

<div>
    @Html.ActionLink("Imprimir Orçamento", "Print", new { id = Model.TotalOrcamentoID })
</div>

@section Scripts {

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        $("#LoadingStatus").html("Carregando....");
        var totalOrcamentoID = $('#TotalOrcamentoID').val();

        $(document).ready(function () {

            var url = "/Orcamentos/GetCartItems?id=" + totalOrcamentoID;

            $.ajax({
                url: url,
                data: { totalOrcamentoID: totalOrcamentoID },
                type: "POST",
                cache: false,
                success: function (ListaItems) {
                    var SetData = $("#SetItemList");
                    for (var i = 0; i < ListaItems.length; i++) {
                        var Data = "<tr id='" + ListaItems[i].ID + "'>" +
                            "<td>" + ListaItems[i].Descriminação + "</td>" +
                            "<td>" + ListaItems[i].ProdutoUnidade + "</td>" +
                            "<td>" + ListaItems[i].ProdutoTotal + "</td>" +
                            "<td>" + "<a href='#' class='btn btn-warning' onclick='EditarOrcamento(" + ListaItems[i].ID + ")' ><span class='glyphicon glyphicon-edit'></span></a>" + "</td>" +
                            "<td>" + "<a href='#' class='btn btn-danger' onclick='DeleteStudentRecord(" + ListaItems[i].ID + ")'><span class='glyphicon glyphicon-trash'></span></a>" + "</td>" +
                            "</tr>";
                        SetData.append(Data);
                        $("#LoadingStatus").html(" ");
                    }
                }
            });

        });


        //$.post("/Orcamentos/GetCartItems", totalOrcamentoID, DataBind);
        //debugger;
        //function DataBind(ListaItems) {
        //    var SetData = $("#SetItemList");
        //    for (var i = 0; i < ListaItems.length; i++) {
        //        var Data = "<tr class='row_" + StudentList[i].ID + "'>" +
        //            "<td>" + ListaItems[i].Quantidade + "</td>" +
        //            "<td>" + ListaItems[i].Descriminação + "</td>" +
        //            "<td>" + ListaItems[i].ProdutoUnidade + "</td>" +
        //            "<td>" + ListaItems[i].ProdutoTotal + "</td>" +
        //            "<td>" + "<a href='#' class='btn btn-warning' onclick='EditStudentRecord(" + ListaItems[i].StudentId + ")' ><span class='glyphicon glyphicon-edit'></span></a>" + "</td>" +
        //            "<td>" + "<a href='#' class='btn btn-danger' onclick='DeleteStudentRecord(" + ListaItems[i].StudentId + ")'><span class='glyphicon glyphicon-trash'></span></a>" + "</td>" +
        //            "</tr>";
        //        SetData.append(Data);
        //        $("#LoadingStatus").html(" ");

        //    }
        //}

        //Show The Popup Modal For Add New Item

        function AddNewOrcamento() {
            //$("#form1")[0].reset();
            //$("#TotalOrcamentoID").val(0);
            $("#ModalTitle").html("Adicionar novo item ");
            $("#MyModal").modal();

        }

        //Show The Popup Modal For Edit Student Record

        function EditarOrcamento(valor) {
            var url = "/Orcamentos/GetOrcamentoById";
            var orcamentoID = valor;

            $("#ModalTitle").html("Modificar orçamento");
            $("#MyModal").modal();

            $.ajax({
                type: "POST",
                data: { orcamentoID: orcamentoID },
                url: url,
                success: function (data) {
                    $("#orcamentoID").val(data.ID);
                    $("#Descriminacao").val(data.Descriminação);
                    $("#ProdutoUnidade").val(data.ProdutoUnidade);
                    $("#ProdutoTotal").val(data.ProdutoTotal);

                }
            })
        }


        $("#SaveStudentRecord").click(function () {
            var data = $("#SubmitForm").serialize();
            var id = $("#orcamentoID").val();
            var totalOrcamentoID = $("#TotalOrcamentoID").val();
            var produtoTotal = $('#ProdutoTotal').val();
            var produtoUnidade = $('#ProdutoUnidade').val();
            var descriminacao = $('#Descriminacao').val();

            if (id != null && id > 0) {
                $.ajax({
                    type: "Post",
                    url: "/Orcamentos/Edit",
                    data: { id: id, totalOrcamentoID: totalOrcamentoID, produtoTotal: produtoTotal, produtoUnidade: produtoUnidade, descriminacao : descriminacao },
                    success: function () {
                        alert("Successo!..");
                        $("#MyModal").modal("hide");
                        window.location.href = "/Orcamentos/Create/" + @Model.TotalOrcamentoID;
                }

            })
            }
            else {

            $.ajax({
                type: "Post",
                url: "/Orcamentos/Create",
                data: data,
                success: function () {
                    alert("Successo!..");
                    $("#MyModal").modal("hide");
                    window.location.href = "/Orcamentos/Create/" + @Model.TotalOrcamentoID;


                }

            })
            }


        });

        //Show The Popup Modal For DeleteComfirmation
        var DeleteStudentRecord = function (ID) {
            var idOrcamento = $('#ID').val();
            var id = $("#orcamentoID").val(ID);
            $("#DeleteConfirmation").modal("show");
        }
        var ConfirmDelete = function () {
            var orcamentoID = $("#orcamentoID").val();

            $.ajax({
                   type: "Post",
                   url: "/Orcamentos/Delete",
                   data: { id: orcamentoID },
                    success: function () {
                        alert("Successo!..");
                        $("#MyModal").modal("hide");
                        window.location.href = "/Orcamentos/Create/" + @Model.TotalOrcamentoID;
                }
            })
        }
    </script>

}
